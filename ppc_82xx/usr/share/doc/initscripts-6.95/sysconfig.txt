Files in /etc/sysconfig
=======================

/etc/sysconfig/authconfig

  used by authconfig to store information about the system's user
  information and authentication setup; changes made to this file
  have no effect until the next time authconfig is run

    USEHESIOD=no
      Whether or not the hesiod naming service is in use.  If not set,
      authconfig examines the passwd setting in /etc/nsswitch.conf.
    USELDAP=no
      Whether or not LDAP is used as a naming service.  If not set,
      authconfig examines the passwd setting in /etc/nsswitch.conf.
    USENIS=no
      Whether or not NIS is in use.  If not set, authconfig examines
      the passwd setting in /etc/nsswitch.conf.

    USEKERBEROS=no
      Whether or not Kerberos is in use.  If not set, authconfig examines
      the settings in /etc/pam.d/system-auth.
    USELDAPAUTH=no
      Whether or not LDAP is being used for authentication.  If not set,
      authconfig examines the settings in /etc/pam.d/system-auth.  Note
      that this option is separate from USELDAP, and that neither implies
      the other.
    USEMD5=no
      Whether or not MD5-based hashing should be used when setting passwords.
      If not set, authconfig examines the settings in /etc/pam.d/system-auth.
      This option affects authentication using both local files and LDAP.
    USESHADOW=no
      Whether or not shadow passwords are in use.  If not set, authconfig
      checks for the existence of /etc/shadow.
    USESMBAUTH=no
      Whether or not SMB authentication is in use.  If not set, authconfig
      examines the settings in /etc/pam.d/system-auth.

/etc/sysconfig/autofsck

  does not normally exist; if it does, it can influence a choice
  whether or not to fsck after a crash

    AUTOFSCK_TIMEOUT=5
      Number of seconds to wait for console user to make a choice
    AUTOFSCK_DEF_CHECK=no
      If the user does not respond, choose whether or not to fsck
    
/etc/sysconfig/clock:

  deprecated values from earlier releases:

    CLOCKMODE=GMT indicates that the clock is set to UTC
    CLOCKMODE=ARC on alpha only indicates the ARC console's
      42-year time offset is in effect

  currently correct values:

    UTC=true indicates that the clock is set to UTC; anything
      else indicates that it is set to local time
    ARC=true on alpha only indicates the ARC console's
      42-year time offset is in effect; otherwise the normal
      Unix epoch is assumed
    ZONE="filename" indicates the zonefile under /usr/share/zoneinfo
      that /etc/localtime is a copy of, for example:
        ZONE="US/Eastern"

/etc/sysconfig/desktop:
  DESKTOP=GNOME|KDE|AnotherLevel
     This determines the default desktop for new users.
  DISPLAYMANAGER=GNOME|KDE|XDM
     This determines display manager started by /etc/X11/prefdm,
     independent of the desktop.

/etc/sysconfig/init:

  BOOTUP=<some bootup mode>
     BOOTUP=color means new (as of RH6.0) boot display. 
     BOOTUP=verbose means old style display
     Anything else means new display, but without ANSI-formatting
  LOGLEVEL=<a number>
     Sets the initial console logging level for the kernel.
     The default is 7. 8 means everything (including debugging);
     1 means nothing except kernel panics. syslogd will override
     this once it starts.
  RES_COL=<a number>
     Column of the screen to start status labels at. Defaults to 60
  MOVE_TO_COL=<a command>
     A command to move the cursor to $RES_COL. Defaults to nasty
     ANSI sequences output by echo -e.
  SETCOLOR_SUCCESS=<a command>
     A command to set the color to a color indicating success.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to green.
  SETCOLOR_FAILURE=<a command>
     A command to set the color to a color indicating failure.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to red.
  SETCOLOR_WARNING=<a command>
     A command to set the color to a color indicating warning.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to yellow.
  SETCOLOR_NORMAL=<a command>
     A command to set the color to 'normal'. Defaults to nasty
     ANSI sequences output by echo -e.
  PROMPT=yes|no
     Set to 'no' to disable the key check for interactive mode.

  obsoleted values from earlier releases:

    MAGIC_SYSRQ=yes|no
       Setting this to 'no' used to disable the magic sysrq key and
       Stop-A (break on serial console) on SPARC. This setting has been
       moved into kernel.sysrq and kernel.stop-a settings respectively in
       /etc/sysctl.conf. Setting either of them there to 0 disables it,
       setting it to 1 enables it.
    STOP_A=yes|no
       Setting this to 'no' used to disable the Stop-A (break on
       serial console) key on SPARC.
       This setting has been moved into kernel.stop-a setting in
       /etc/sysctl.conf. Setting it there to 0 disables it,
       setting it to 1 enables it. The setting should be present
       on SPARC only.

/etc/sysconfig/keyboard:

  KEYTABLE=<keytable file>
     for example: KEYTABLE="/usr/lib/kbd/keytables/us.map"
    
     If you dump a keymap (using 'dumpkeys') to
	/etc/sysconfig/console/default.kmap
     it will be loaded on bootup before filesystems are mounted/checked.
     This could be useful if you need to emergency type the root password.
     This has to be a dumped keymap, as opposed to copying the shipped
     keymap files, as the shipped files include other maps from the
     /usr/lib/kbd/keytables directory.
     
  KEYBOARDTYPE=sun|pc
    on SPARC only, sun means a sun keyboard is attached on /dev/kbd,
    pc means a PS/2 keyboard is on ps/2 port.
  
/etc/sysconfig/mouse:

  MOUSETYPE=microsoft|mouseman|mousesystems|ps/2|msbm|logibm|atibm|
    logitech|mmseries|mmhittab
  XEMU3=yes|no (emulate three buttons with two buttons whenever
    necessary, most notably in X)
  DEVICE=<a device node> (the device of the mouse)

  In addition, /dev/mouse points to the mouse device.

/etc/sysconfig/network:

  NETWORKING=yes|no
  HOSTNAME=<fqdn by default, but whatever hostname you want>
  GATEWAY=<gateway IP>
  GATEWAYDEV=<gateway device> (e.g. eth0)
  NISDOMAIN=<nis domain name>
  IPX=yes|no
  IPXAUTOPRIMARY=on|off (note, that MUST be on|off, not yes|no)
  IPXAUTOFRAME=on|off (again, not yes|no)
  IPXINTERNALNETNUM=<netnum>
  IPXINTERNALNODENUM=<nodenum>

  All the IPX stuff is optional, and should default to off.

  NETWORKING_IPV6=yes|no
    Enable or disable global IPv6 initialization
    Default: no
  IPV6FORWARDING=yes|no
    Enable or disable global forwarding of incoming IPv6 packes 
    on all interfaces.
    Note: Actual packet forwarding cannot be controlled per-device, use netfilter6 for such issues
    Default: no
  IPV6INIT=yes|no
    Enable or disable IPv6 configuration for all interfaces
    Use with caution!
    Default: value not set in this file

  IPV6_AUTOCONF=yes|no
    Sets the default for device-based autoconfiguration.
    Default: yes if IPV6FORWARDING=no, no if IPV6FORWARDING=yes
  IPV6_ROUTER=yes|no
    Sets the default for device-based Host/Router behaviour.
    Default: yes if IPV6FORWARDING=yes, no if IPV6FORWARDING=no
  IPV6_AUTOTUNNEL=yes|no
    Controls automatic IPv6 tunneling.
    Default: no

  IPV6_DEFAULTGW=<IPv6 address[%interface]> (optional)
    Add a default route through specified gateway
    An interface can be specified: required for link-local addresses
    Examples:
      IPV6_DEFAULTGW="3ffe:400:100:f101::2"
        Add default route through 3ffe:400:100:f101::2
      IPV6_DEFAULTGW="3ffe:400:100:f101::2%eth0"
        Add default route through 3ffe:400:100:f101::2 and device eth0
      IPV6_DEFAULTGW="fe80::1%eth0"
        Add default route through fe80::1 and device eth0

  Note: if IPV6_DEFAULTGW is specified with %interface scope and it
        doesn't match IPV6_DEFAULTDEV, IPV6_DEFAULTDEV is ignored.
  Note: it's preferred to use %interface for all addresses, not
        just link-local if you have multiple IPv6-enabled interfaces.

  IPV6_DEFAULTDEV=<interface> (optional)
    Add a default route through specified interface without specifying next hop
    Type of interface will be tested whether this is allowed
    Examples:
      IPV6_DEFAULTDEV="eth0" INVALID example!
      IPV6_DEFAULTDEV="ppp0"
      IPV6_DEFAULTDEV="sit1"
    Examples for 6to4
      IPV6_DEFAULTDEV="tun6to4"
        Add default route through dedicated 6to4 tunnel device "tun6to4", if configured

  Note: "tun6to4" does not support an additional IPV6_DEFAULTGW.
        Other interfaces prefer IPV6_DEFAULTGW, if specified.

  IPV6_RADVD_PIDFILE=<pid-file> (optional)
    Location of PID file for controlling radvd, see IPV6_CONTROL_RADVD
    Default: "/var/run/radvd/radvd.pid"
    Example:
       IPV6_RADVD_PIDFILE="/some/other/location/radvd.pid"
  IPV6TO4_RADVD_PIDFILE=<pid-file> (obsolete)
    As above, still supported for a while for backward compatibility.
  IPV6_RADVD_TRIGGER_ACTION=startstop|reload|restart|SIGHUP (optional)
    How to trigger radvd in case of 6to4 or PPP action
     startstop: radvd starts if interface goes up and stops
       if interface goes down using initscript call of radvd with related parameter
     reload|restart: initscript of radvd is called with this parameter
     SIGHUP: signal HUP is sent to radvd, pidfile must be specified, if not the default
    Default: SIGHUP

  IPv6 options above can be overridden in interface-specific configuration.

  obsoleted values from earlier releases:

    FORWARD_IPV4=yes|no
      This setting has been moved into net.ipv4.ip_forward setting
      in /etc/sysctl.conf. Setting it to 1 there enables IP forwarding,
      setting it to 0 disables it (which is the default for RFC compliance).
    DEFRAG_IPV4=yes|no
      Setting this to yes used to automatically defragment IPv4
      packets. This is a good idea for masquerading, and
      a bad idea otherwise. This setting was moved into
      net.ipv4.ip_always_defrag setting in /etc/sysctl.conf. It
      is no longer valid for 2.4 kernels.

/etc/sysconfig/static-routes:

  Contains lines of the form:

    <device> host|net <arguments to route command>

  <device> may be a device name to have the route brought up and
  down with the device, or "any" to have the correct devices calculated
  at run time.
  
  For example:
  
  eth0 host 192.168.2.2 eth0
  
  adds a host route through eth0 to 192.168.2.2, while
  
  any net 192.168.2.0 netmask 255.255.255.0 ppp0
  
  adds a network route to the 192.168.2.0 network through ppp0.
  
/etc/sysconfig/static-routes-ipv6:
  Contains lines of the form:

    <device> IPv6-network IPv6-gateway
    <tunneldevice> IPv6-network

  <device> must be a device name to have the route brought up and
  down with the device

  For example:
  
  eth0   fec0:0:0:2::/64                         fec0:0:0:1:0:0:0:20
   adds a route for IPv6 network fec0:0:0:2::/64 through fec0:0:0:1:0:0:0:20
   
  eth0    2000::/3	                         3ffe:ffff:0:1::1
   so-called "default" routes for clients

  sit1    2000::/3
   adds routes through dedicated tunnel interface sit1

  tun6to4  3ffe:ffff:1234::/56			
  tun6to4  3ffe:ffff:5678::/56			::5.6.7.8
   adds routes through hardwired 6to4 tunnel interface tun6to4

  Notes:
    * default routes (such as the "2000::/3" shown above) should be set with
       IPV6_DEFAULTGW and IPV6_DEFAULTDEV, see more above.
    * tunnel device "sit0" is not supported here, routes will never be applied

/etc/sysconfig/routed:

  SILENT=yes|no
  EXPORT_GATEWAY=yes|no
  
/etc/sysconfig/rawdevices:

  This is used for setting up raw device to block device mappings.
  It has the format:
  	<rawdev> <major> <minor>
        <rawdev> <blockdev>
  For example: 
     /dev/raw/raw1 /dev/sda1
     /dev/raw/raw2 8 5

/etc/sysconfig/pcmcia:

  PCMCIA=yes|no
  PCIC=i82365|tcic
  PCIC_OPTS=<socket driver (i82365 or tcic) timing parameters>
  CORE_OPTS=<pcmcia_core options>
  CARDMGR_OPTS=<cardmgr options>

/etc/sysconfig/amd:

  ADIR=/.automount  (normally never changed)
  MOUNTPTS='/net /etc/amd.conf'  (standard automount stuff)
  AMDOPTS=  (extra options for AMD)

/etc/sysconfig/tape:

  DEV=/dev/nst0
    Tape device.  Use the non-rewinding one for these scripts.
  
    For SCSI tapes this is /dev/nst#, where # is the number of the
    tape drive you want to use.  If you only have one then use
    nst0.
 
    For IDE tapes you use /dev/ht#, where # is the number of the tape
    drive you want to use (usually ht0).
 
    For floppy tape drives use /dev/ftape.

  ADMIN=root
    Person to mail to if the backup fails for any reason

  SLEEP=5
    Time to sleep between tape operations.  Some drives need a bit
    more than others, but 5 seems to work for 8mm, 4mm, and DLT

  BLOCKSIZE=32768
    This worked fine for 8mm, then 4mm, and now DLT.  An optimal
    setting is probably however much data your drive writes at one
    time.

  SHORTDATE=$(date +%y:%m:%d:%H:%M)
    A short date string, used in backup log filenames.

  DAY=$(date +log-%y:%m:%d)
    This is used for the log file directory.

  DATE=$(date)
    Regular date string, used in log files.

  LOGROOT=/var/log/backup
    Root of the logging directory

  LIST=$LOGROOT/incremental-list
    This is the file name the incremental backup will use to store
    the incremental list.  It will be $LIST-{some number}.

  DOTCOUNT=$LOGROOT/.count
    For counting as you go to know which incremental list to use

  COUNTER=$LOGROOT/counter-file
    For rewinding when done...might not use.

  BACKUPTAB=/etc/backuptab
    The file in which we keep our list of backup(s) we want to make.

/etc/sysconfig/sendmail:
  DAEMON=yes|no
    yes implies -bd (i.e., listen on port 25 for new mail)
  QUEUE=1h
    given to sendmail as -q$QUEUE
    -q option is not given to sendmail if /etc/sysconfig/sendmail
    exists and QUEUE is empty or undefined.

/etc/sysconfig/i18n

  LANG= set locale for all categories, can be any two letter ISO
    language code
  LC_CTYPE= localedata configuration for classification and conversion
    of characters
  LC_COLLATE= localedata configuration for collation (sort order) of
    strings
  LC_MESSAGES= localedata configuration for translation of yes and no
    messages
  LC_NUMERIC= localedata configuration for non-monetary numeric data
  LC_MONETARY= localedata configuration for monetary data
  LC_TIME= localedata configuration for date and time
  LC_ALL= localedata configuration overriding all of the above
  LANGUAGE= can be a : separated list of ISO language codes
  LINGUAS= can be a ' ' separated list of ISO language codes

  The above variables are used in /etc/profile.d/lang.sh.

  SYSFONT= any font that is legal when used as
	/usr/bin/consolechars -f $SYSFONT ...
    (See console-tools package for consolechars command)

  UNIMAP= any SFM (screen font map, formerly called Unicode mapping
    table - see consolechars(8))
	/usr/bin/consolechars -f $SYSFONT --sfm $UNIMAP
 
  SYSFONTACM= any ACM (application charset map - see consolechars(8))
        /usr/bin/consolechars -f $SYSFONT --acm $SYSFONTACM
 
  The above is used by the /sbin/setsysfont command (which is run
  by rc.sysinit at boot time.)

/etc/sysconfig/harddisks
/etc/sysconfig/harddiskhd[a-h] (for specific devices)
  These options are used to tune (E)IDE hard drives and other
  devices - read the hdparm man page for more information

  USE_DMA=1
    Set this to 1 to enable DMA. This might cause some 
    data corruption on certain chipset / hard drive
    combinations. USE WITH CAUTION AND BACKUP.
    This is used with the "-d" option
  
  MULTIPLE_IO=16
    Multiple sector I/O. a feature of most modern IDE hard drives,
    permitting the transfer of multiple sectors per I/O interrupt,
    rather than the usual one sector per interrupt.  When this feature
    is enabled, it typically reduces operating system overhead for disk
    I/O by 30-50%.  On many systems, it also provides increased data
    throughput of anywhere from 5% to 50%.  Some drives, however (most
    notably the WD Caviar series), seem to run slower with multiple mode
    enabled. Under rare circumstances, such failures can result in
    massive filesystem corruption. USE WITH CAUTION AND BACKUP.
    This is the sector count for multiple sector I/O - the "-m" option
  
  EIDE_32BIT=3
    (E)IDE 32-bit I/O support (to interface card). USE WITH CAUTION.
  
  LOOKAHEAD=1
    Enable drive read-lookahead (safe)

  EXTRA_PARAMS=<anything>
    Add any extra parameters you want to pass to hdparm here.

Files in /etc/sysconfig/network-scripts/
========================================

/etc/sysconfig/network-scripts/ifup:
/etc/sysconfig/network-scripts/ifdown:

  Symlinks to /sbin/ifup and /sbin/ifdown, respectively.
  These are the only two scripts "in" this directory that should
  be called directly; these two scripts call all the other
  scripts as needed.  These symlinks are here for legacy purposes
  only -- they'll will probably be removed in future versions, so
  only /sbin/ifup and /sbin/ifdown should currently be used.

  These scripts take one argument normally: the name of the device
  (e.g. eth0).  They are called with a second argument of "boot"
  during the boot sequence so that devices that are not meant to
  be brought up on boot (ONBOOT=no, see below) can be ignored at
  that time.

/etc/sysconfig/network-scripts/init.ipv6-global:
  Not really a public file.  Contains different basic settings that
  are set from /etc/[rc.d]/init.d/network at different stages of
  network initialization.

/etc/sysconfig/network-scripts/network-functions:

  Not really a public file.  Contains functions which the scripts use
  for bringing interfaces up and down.  In particular, it contains
  most of the code for handling alternative interface configurations
  and interface change notification through netreport.

/etc/sysconfig/network-scripts/network-functions-ipv6:

  Not really a public file.  Contains functions which the scripts use
  for bringing IPv6 on interfaces up and down, like addresses, routes,
  forwarding handling and static or automatic tunneling.

/etc/sysconfig/network-scripts/ifcfg-<interface-name> and
/etc/sysconfig/network-scripts/ifcfg-<interface-name>:<alias-name>:

  The first defines an interface, and the second contains
  only the parts of the definition that are different in a
  "alias" (or alternative) interface.  For example, the
  network numbers might be different, but everything else
  might be the same, so only the network numbers would be
  in the alias file, but all the device information would
  be in the base ifcfg file.

  The items that can be defined in an ifcfg file depend on the
  interface type.  The really obvious ones I'm not going to
  bother to define; you can figure out what "IPADDR" is, I
  think...  :-)

  Base items:
    NAME=<friendly name for users to see>
      Most important for PPP.  Only used in front ends.
    DEVICE=<name of physical device (except dynamically-allocated PPP
      devices where it is the "logical name")>
    IPADDR=
    SRCADDR=
    NETMASK=
    GATEWAY=
    ONBOOT=yes|no
    USERCTL=yes|no
    BOOTPROTO=none|bootp|dhcp
    MTU=
    PEERDNS=yes|no
      modify /etc/resolv.conf if peer uses msdns extension (PPP only) or
      DNS{1,2} are set, or if using pump or dhcpcd. default to "yes".
    DNS{1,2}=<ipaddress>
      provide DNS addresses that are dropped into the resolv.conf
      file if PEERDNS is not set to "no".
    FIREWALL_MODS=yes|no
      modify firewall to attempt to allow DNS through. Defaults to 'yes'.
    SRCADDR=
      use the specified source address for outgoing packets

  If BOOTPROTO is not "none", then the only other item that
  must be set is the DEVICE item; all the rest will be determined
  by the boot protocol.  No "dummy" entries need to be created.

  Base items being deprecated:
    NETWORK=<will be calculated automatically with ifcalc>
    BROADCAST=<will be calculated automatically with ifcalc>

  IPv6-only items for real interfaces:
    IPV6INIT=yes|no
      Enable or disable IPv6 configuration for this interface
      Default: no
    IPV6FORWARDING=yes|no
      Enable or disable global forwarding of incoming IPv6 packets
      Note: Obsolete in interface specification!
      Default: no
    IPV6ADDR=<IPv6 address>[/<prefix length>]
      Specify a primary static IPv6 address here
      Optional, if normal host and a router advertisement daemon is on local link
      Required, if node is a router and interface should route packets
      Note: if prefix length is omitted, 64 is assumed
      Example:
        IPV6ADDR="3ffe:ffff:0:5::1"
        IPV6ADDR="3ffe:ffff:0:1::1/128"
    IPV6ADDR_SECONDARIES="<IPv6 address>[/<prefix length>] ..." (optional)
      A list of secondary IPv6 addresses (e.g. useful for virtual hosting)
      Example:
        IPV6ADDR_SECONDARIES="3ffe:ffff:0:1::10 3ffe:ffff:0:2::11/128"
    IPV6_MTU=<MTU of link> (optional)
      Optional, dedicated MTU of this link
      Note: Must be greater or equal to 1280.
      Example:
        IPV6_MTU="1280"

  Special configuration options for multi-homed hosts etc.
	IPV6_ROUTER=yes|no: Controls IPv6 autoconfiguration
	IPV6_AUTOCONF=yes|no: Controls IPv6 autoconfiguration
	 Defaults:
	  Global IPV6FORWARDING=yes: IPV6_AUTOCONF=no, IPV6_ROUTER=yes
	  Global IPV6FORWARDING=no: IPV6_AUTOCONF=yes

  Optional settings for a 6to4 tunnel
    IPV6TO4INIT=yes|no
      Enable or disable 6to4 tunneling setup
      Default: no
    IPV6TO4_RELAY=<IPv4 address> (optional)
      IPv4 address of the remote 6to4 relay
      Note: if this is omitted, ::192.88.99.1 (the anycast relay address) is chosen
    IPV6TO4_IPV4ADDR=<IPv6 address>[/<prefix length>] (optional)
      Overwrite local IPv4 address which is accessable from the Internet
       (optional, in case of static IPv4-NAT behind a router or other special scenarios)
    IPV6TO4_ROUTING="<device>-<suffix>/<prefix length> ..." (optional)
      A list of routing tokens to setup proper IPv6 routes on the LAN
      Example:
         IPV6TO4_ROUTING="eth0-:f101::0/64 eth1-:f102::0/64"
         Will create one route per eth0 and eth1, taking given SLA

  Optional settings for a 6to4 tunnel or a ppp link
    IPV6_CONTROL_RADVD=yes|no (optional)
      Enable signalling radvd that the 6to4 prefix has been changed or a
       preconfigured dynamic device is up or down
      Default: no

  IPv6-only items for static tunnel interface:
    Interface name: sitX (X => 1)
    IPV6INIT=yes|no
      Enable or disable IPv6 configuration for this interface
      Default: no
    IPV6TUNNELIPV4=<IPv4 address>
      Specify IPv4 address of a foreign IPv6-in-IPv4 tunnel endpoint
      Example:
        IPV6TUNNELIPV4="1.2.3.4"
    IPV6TUNNELIPV4LOCAL=<IPv4 address>
      Specify local IPv4 address of tunnel, useful on interfaces with multiple IPv4 addresses
    IPV6ADDR=<IPv6 address>[/<prefix length>] (optional)
     local IPv6 address of a numbered tunnel
    IPV6_MTU=<MTU of tunnel> (optional)
      Optional, dedicated MTU of this tunnel
      Note: Must be greater or equal to 1280
      Example:
        IPV6_MTU="1280"

  Ethernet-only items:
    {IPXNETNUM,IPXPRIMARY,IPXACTIVE}_{802_2,802_3,ETHERII,SNAP}
    configuration matrix for IPX.  Only used if IPX is active.
    Managed from /etc/sysconfig/network-scripts/ifup-ipx
    ARP=yes|no (adds 'arp' flag to ifconfig, for use with the
      ethertap device)
    Deprecated:
     PROMISC=yes|no (enable or disable promiscuous mode)
     ALLMULTI=yes|no (enable or disable all-multicast mode)
     
     To properly set these, use the packet socket interface.

  PPP/SLIP items:
    PERSIST=yes|no
    MODEMPORT=<device, say /dev/modem>
    LINESPEED=<speed, say 115200>
    DEFABORT=yes|no (tells netcfg whether or not to put default
      abort strings in when creating/editing the chat script and/or
      dip script for this interface)
      (meaningless with WVDIALSECT)
 
  PPP-specific items
    WVDIALSECT=<list of sections from wvdial.conf to use>
      If this variable is set, then the chat script (if it
      exists) is ignored, and wvdial is used to open the
      PPP connection.
    DEFROUTE=yes|no (set this interface as default route? yes is default)
    DEBUG=yes|no (defaults to yes)
      turns on/off pppd and chat (if used) debugging.
    ESCAPECHARS=yes|no (simplified interface here doesn't let people
      specify which characters to escape; almost everyone can use
      asyncmap 00000000 anyway, and they can set PPPOPTIONS to
      asyncmap foobar if they want to set options perfectly)
    HARDFLOWCTL=yes|no (yes imples "modem crtscts" options)
    PPPOPTIONS=<arbitrary option string; is placed last on the
      command line, so it can override other options like asyncmap
      that were specified differently>
    PAPNAME=<"name $PAPNAME" on pppd command line> (note that
      the "remotename" option is always specified as the logical
      ppp device name, like "ppp0" (which might perhaps be the
      physical device ppp1 if some other ppp device was brought
      up earlier...), which makes it easy to manage pap/chap
      files -- name/password pairs are associated with the
      logical ppp device name so that they can be managed
      together.
    REMIP=<remote ip address, normally unspecified>
    MTU=
    MRU=
    DISCONNECTTIMEOUT=<number of seconds, default currently 5>
      (time to wait before re-establishing the connection after
      a successfully-connected session terminates before attempting
      to establish a new connection.)
    RETRYTIMEOUT=<number of seconds, default currently 60>
      (time to wait before re-attempting to establish a connection
      after a previous attempt fails.)
    RETRYCONNECT=yes|no (defaults to yes)
      If this is yes, then we will re-run pppd if it exits with a 
      "connect script failed" status.  Otherwise, only one attempt
      is made to bring up the connection.  Note that some connect
      scripts (for example, wvdial) might do their own retries (such
      as BUSY or NO DIALTONE conditions).
    MAXFAIL=<number>
      If this is set, this will cause ppp-watch to exit after
      the specified number of attempts.
    DEMAND=yes|no
      Switches on demand-dialing mode using pppd's "demand" option.
    IDLETIMEOUT=600
      The amount of time the link needs to be inactive before pppd will
      bring it down automatically.
    BOOTTIMEOUT=30
      The amount of time to wait at boot before giving up on the
      connection.

  IPPP-specific items (ISDN)
    PROVIDER=<ProviderName>
	 USER=<Login>
    PASSWORD=<Password>
	 ENCAP=[syncppp|]
    DIALMODE=[manual|auto]
    SECURE=off|on
	 MSN=<>
	 PHONE_IN=<Callback.Number>
	 	 AREACODE=<>
	 REGIONCODE=<>
	 PHONE_OUT=<PhoneNumber>
    BUNDLING=off|on
    HUPTIMEOUT=<number>
    DNS1=<PrimaryDNS>
    DNS2=<SecondaryDNS>
    DOMAIN=""
    LAYER=[HDLC|]
    CALLBACK=off|on
    CHARGEHUP=<number>
    CHARGEINT=<number>
    CBHUP=<number>
    CBDELAY=<number>
    DIALMAX=<number>
    AUTH=[+pap] [-chap]
    IHUP=<>
    DELDEFAULTROUTE=[enabled|disabled]
    CBCP=off|on
    VJ=off|on
    VJCCOMP=off|on
    AC=off|on
    PC=off|on
    BSDCOMP=off|on
    CCP=off|on
    SLAVE_DEVICE=ippp[0-9]
    
  ippp0 items being deprecated:
    BOOT=[on|off] will be converted to ONBOOT=[yes|no] by netconf
    LOCAL_IP=     will be converted to IPADDR by netconf
    REMOTE_IP=    will be converted to GATEWAY by netconf

      
/etc/sysconfig/network-scripts/chat-<interface-name>:

  chat script for PPP or SLIP connection intended to establish
  the connection.  For SLIP devices, a DIP script is written
  from the chat script; for PPP devices, the chat script is used
  directly.

/etc/sysconfig/network-scripts/dip-<interface-name>

  A write-only script created from the chat script by netcfg.
  Do not modify this.  In the future, this file may disappear
  by default and created on-the-fly from the chat script if
  it does not exist.

/etc/sysconfig/network-scripts/ifup-post

  Called when any network device EXCEPT a SLIP device comes
  up.  Calls /etc/sysconfig/network-scripts/ifup-routes to
  bring up static routes that depend on that device.  Calls
  /etc/sysconfig/network-scripts/ifup-aliases to bring up
  aliases for that device.  Sets the hostname if it is not
  already set and a hostname can be found for the IP for that
  device.  Sends SIGIO to any programs that have requested
  notification of network events.

  Could be extended to fix up nameservice configuration, call
  arbitrary scripts, etc, as needed.

/etc/sysconfig/network-scripts/ifup-routes

  Set up static routes for a device.

/etc/sysconfig/network-scripts/ifup-aliases

  Bring up aliases for a device.

/etc/sysconfig/network-scripts/ifdhcpc-done

  Called by dhcpcd once dhcp configuration is complete; sets
  up /etc/resolv.conf from the version dhcpcd dropped in
  /etc/dhcpc/resolv.conf

